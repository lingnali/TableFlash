{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/lingnali/Desktop/TableFlash/landingp/src/App.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React from \"react\";\nimport { BrowserRouter as Router, Switch, Route, Link //useHistory,\n, useLocation //useParams\n} from \"react-router-dom\";\nimport styled, { css } from 'styled-components';\nimport UserGrid from './Profile/UserGrid';\nimport { Modal } from './Modal/Modal';\nimport Posts from './Posts'; // This example shows how to render two different screens\n// (or the same screen in a different context) at the same URL,\n// depending on how you got there.\n//\n// Click the \"featured images\" and see them full screen. Then\n// \"visit the gallery\" and click on the colors. Note the URL and\n// the component are the same as before but now we see them\n// inside a modal on top of the gallery screen.\n\nexport default function ModalGalleryExample() {\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(ModalSwitch, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n}\n_c = ModalGalleryExample;\n\nfunction ModalSwitch() {\n  _s();\n\n  let location = useLocation(); // This piece of state is set when one of the\n  // gallery links is clicked. The `background` state\n  // is the location that we were at when one of\n  // the gallery links was clicked. If it's there,\n  // use it as the location for the <Switch> so\n  // we show the gallery in the background, behind\n  // the modal.\n\n  let background = location.state && location.state.background;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Switch, {\n      location: background || location,\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/\",\n        children: /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 41\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/gallery\",\n        children: /*#__PURE__*/_jsxDEV(Gallery, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 42\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/img/:id\",\n        children: /*#__PURE__*/_jsxDEV(ImageView, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 42\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), background && /*#__PURE__*/_jsxDEV(Route, {\n      path: \"/img/:id\",\n      children: /*#__PURE__*/_jsxDEV(Modal, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 55\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 22\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n} // created style component\n\n\n_s(ModalSwitch, \"pkHmaVRPskBaU4tMJuJJpV42k1I=\", false, function () {\n  return [useLocation];\n});\n\n_c2 = ModalSwitch;\nexport const Image = styled.div`\n  width: 305px;\n  height: 305px;\n  background: no-repeat center/150% url(/img/${({\n  index\n}) => index}.png);\n  ${({\n  inModal\n}) => !inModal && css`\n    :hover {\n    opacity: .9;\n    }\n  `}\n`;\n_c3 = Image;\n\nfunction Home() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      to: \"/gallery\",\n      children: \"Visit the Gallery\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Featured Images\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: [/*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/img/2\",\n          children: \"Tomato\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/img/4\",\n          children: \"Crimson\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n}\n\n_c4 = Home;\nconst PhotoGrid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(3, 305px);\n  justify-content: center;\n  gap: 20px;\n`;\n_c5 = PhotoGrid;\n\nfunction Gallery() {\n  _s2();\n\n  let location = useLocation();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(UserGrid, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PhotoGrid, {\n      children: Posts.map(i => /*#__PURE__*/_jsxDEV(Link, {\n        to: {\n          pathname: `/img/${i.id}`,\n          // This is the trick! This link sets\n          // the `background` in location state.\n          state: {\n            background: location\n          }\n        },\n        children: /*#__PURE__*/_jsxDEV(Image, {\n          index: i.id\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 13\n        }, this)\n      }, i.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 5\n  }, this);\n}\n\n_s2(Gallery, \"pkHmaVRPskBaU4tMJuJJpV42k1I=\", false, function () {\n  return [useLocation];\n});\n\n_c6 = Gallery;\n\nfunction ImageView() {\n  //let { id } = useParams();\n  let image = Posts[parseInt(id, 10) - 1];\n  if (!image) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Image not found\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 126,\n    columnNumber: 22\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: image.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Image, {\n      index: image.id\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 129,\n    columnNumber: 5\n  }, this);\n} // function Modal() {\n//   let history = useHistory();\n//   let { id } = useParams();\n//   let image = IMAGES[parseInt(id, 10) - 1];\n//   if (!image) return null;\n//   let back = e => {\n//     e.stopPropagation();\n//     history.goBack();\n//   };\n//   return (\n//     <div\n//       onClick={back}\n//       style={{\n//         position: \"absolute\",\n//         top: 0,\n//         left: 0,\n//         bottom: 0,\n//         right: 0,\n//         background: \"rgba(0, 0, 0, 0.15)\"\n//       }}\n//     >\n//       <div\n//         className=\"modal\"\n//         style={{\n//           position: \"absolute\",\n//           background: \"#fff\",\n//           top: 25,\n//           left: \"10%\",\n//           right: \"10%\",\n//           padding: 15,\n//           border: \"2px solid #444\"\n//         }}\n//       >\n//         <h1>{image.title}</h1>\n//         <Image inModal index={image.id} />\n//         <button type=\"button\" onClick={back}>\n//           Close\n//         </button>\n//       </div>\n//     </div>\n//   );\n// }\n\n\n_c7 = ImageView;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7;\n\n$RefreshReg$(_c, \"ModalGalleryExample\");\n$RefreshReg$(_c2, \"ModalSwitch\");\n$RefreshReg$(_c3, \"Image\");\n$RefreshReg$(_c4, \"Home\");\n$RefreshReg$(_c5, \"PhotoGrid\");\n$RefreshReg$(_c6, \"Gallery\");\n$RefreshReg$(_c7, \"ImageView\");","map":{"version":3,"sources":["/Users/lingnali/Desktop/TableFlash/landingp/src/App.js"],"names":["React","BrowserRouter","Router","Switch","Route","Link","useLocation","styled","css","UserGrid","Modal","Posts","ModalGalleryExample","ModalSwitch","location","background","state","Image","div","index","inModal","Home","PhotoGrid","Gallery","map","i","pathname","id","ImageView","image","parseInt","title"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link,\n  //useHistory,\n  useLocation\n  //useParams\n} from \"react-router-dom\";\n\nimport styled, {css} from 'styled-components';\nimport UserGrid from './Profile/UserGrid';\nimport {Modal} from './Modal/Modal';\nimport Posts from './Posts';\n\n\n// This example shows how to render two different screens\n// (or the same screen in a different context) at the same URL,\n// depending on how you got there.\n//\n// Click the \"featured images\" and see them full screen. Then\n// \"visit the gallery\" and click on the colors. Note the URL and\n// the component are the same as before but now we see them\n// inside a modal on top of the gallery screen.\n\nexport default function ModalGalleryExample() {\n  return (\n    <Router>\n      <ModalSwitch />\n    </Router>\n  );\n}\n\nfunction ModalSwitch() {\n  let location = useLocation();\n\n  // This piece of state is set when one of the\n  // gallery links is clicked. The `background` state\n  // is the location that we were at when one of\n  // the gallery links was clicked. If it's there,\n  // use it as the location for the <Switch> so\n  // we show the gallery in the background, behind\n  // the modal.\n  let background = location.state && location.state.background;\n\n  return (\n    <div>\n      <Switch location={background || location}>\n        <Route exact path=\"/\" children={<Home />} />\n        <Route path=\"/gallery\" children={<Gallery />} />\n        <Route path=\"/img/:id\" children={<ImageView />} />\n      </Switch>\n\n      {/* Show the modal when a background page is set */}\n      {background && <Route path=\"/img/:id\" children={<Modal />} />}\n    </div>\n  );\n}\n\n// created style component\nexport const Image = styled.div`\n  width: 305px;\n  height: 305px;\n  background: no-repeat center/150% url(/img/${({index}) => index}.png);\n  ${({inModal}) => !inModal && css`\n    :hover {\n    opacity: .9;\n    }\n  `}\n`\n\nfunction Home() {\n  return (\n    <div>\n      <Link to=\"/gallery\">Visit the Gallery</Link>\n      <h2>Featured Images</h2>\n      <ul>\n        <li>\n          <Link to=\"/img/2\">Tomato</Link>\n        </li>\n        <li>\n          <Link to=\"/img/4\">Crimson</Link>\n        </li>\n      </ul>\n    </div>\n  );\n}\n\nconst PhotoGrid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(3, 305px);\n  justify-content: center;\n  gap: 20px;\n`\n\nfunction Gallery() {\n  let location = useLocation();\n\n  return (\n    <div>\n      <UserGrid/>\n      <PhotoGrid>\n        {Posts.map(i => (\n          <Link\n            key={i.id}\n            to={{\n              pathname: `/img/${i.id}`,\n              // This is the trick! This link sets\n              // the `background` in location state.\n              state: { background: location }\n            }}\n          >\n            <Image index={i.id} />\n          </Link>\n        ))}\n      </PhotoGrid>\n    </div>\n  );\n}\n\nfunction ImageView() {\n  //let { id } = useParams();\n  let image = Posts[parseInt(id, 10) - 1];\n\n  if (!image) return <div>Image not found</div>;\n\n  return (\n    <div>\n      <h1>{image.title}</h1>\n      <Image index={image.id} />\n    </div>\n  );\n}\n\n// function Modal() {\n//   let history = useHistory();\n//   let { id } = useParams();\n//   let image = IMAGES[parseInt(id, 10) - 1];\n\n//   if (!image) return null;\n\n//   let back = e => {\n//     e.stopPropagation();\n//     history.goBack();\n//   };\n\n//   return (\n//     <div\n//       onClick={back}\n//       style={{\n//         position: \"absolute\",\n//         top: 0,\n//         left: 0,\n//         bottom: 0,\n//         right: 0,\n//         background: \"rgba(0, 0, 0, 0.15)\"\n//       }}\n//     >\n//       <div\n//         className=\"modal\"\n//         style={{\n//           position: \"absolute\",\n//           background: \"#fff\",\n//           top: 25,\n//           left: \"10%\",\n//           right: \"10%\",\n//           padding: 15,\n//           border: \"2px solid #444\"\n//         }}\n//       >\n//         <h1>{image.title}</h1>\n//         <Image inModal index={image.id} />\n//         <button type=\"button\" onClick={back}>\n//           Close\n//         </button>\n//       </div>\n//     </div>\n//   );\n// }\n"]},"metadata":{},"sourceType":"module"}