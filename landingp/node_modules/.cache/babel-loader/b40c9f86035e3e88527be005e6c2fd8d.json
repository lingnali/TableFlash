{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/lingnali/Desktop/TableFlash/landingp/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { BrowserRouter as Router, Switch, Route, Link, useLocation } from \"react-router-dom\";\nimport styled, { css } from 'styled-components';\nimport { Modal } from './Modal/Modal';\nimport { Gallery } from \"./Gallery/Gallery\"; // This example shows how to render two different screens\n// (or the same screen in a different context) at the same URL,\n// depending on how you got there.\n//\n// Click the \"featured images\" and see them full screen. Then\n// \"visit the gallery\" and click on the colors. Note the URL and\n// the component are the same as before but now we see them\n// inside a modal on top of the gallery screen.\n\nexport default function ModalGalleryExample() {\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(ModalSwitch, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n}\n_c = ModalGalleryExample;\n\nfunction ModalSwitch() {\n  _s();\n\n  let location = useLocation(); // This piece of state is set when one of the\n  // gallery links is clicked. The `background` state\n  // is the location that we were at when one of\n  // the gallery links was clicked. If it's there,\n  // use it as the location for the <Switch> so\n  // we show the gallery in the background, behind\n  // the modal.\n\n  let background = location.state && location.state.background;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Switch, {\n      location: background || location,\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/\",\n        children: /*#__PURE__*/_jsxDEV(Gallery, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 41\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/gallery\",\n        children: /*#__PURE__*/_jsxDEV(Gallery, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 42\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/img/:id\",\n        children: /*#__PURE__*/_jsxDEV(Modal, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 42\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), background && /*#__PURE__*/_jsxDEV(Route, {\n      path: \"/img/:id\",\n      children: /*#__PURE__*/_jsxDEV(Modal, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 55\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 22\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n} // created style component\n\n\n_s(ModalSwitch, \"pkHmaVRPskBaU4tMJuJJpV42k1I=\", false, function () {\n  return [useLocation];\n});\n\n_c2 = ModalSwitch;\nexport const Image = styled.div`\n  width: 305px;\n  height: 305px;\n  @media(max-width:990px){\n    width: 100%;\n  }\n  background: no-repeat center/150% url(/img/${({\n  index\n}) => index}.png);\n  ${({\n  inModal\n}) => !inModal && css`\n    :hover {\n    opacity: .9;\n    }\n  `}\n`; // function Home() {\n//   return (\n//     <div>\n//       <Link to=\"/gallery\">Visit the Gallery</Link>\n//       <h2>Featured Images</h2>\n//       <ul>\n//         <li>\n//           <Link to=\"/img/2\">Tomato</Link>\n//         </li>\n//         <li>\n//           <Link to=\"/img/4\">Crimson</Link>\n//         </li>\n//       </ul>\n//     </div>\n//   );\n// }\n\nconst PhotoGrid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(3, 305px);\n  justify-content: center;\n  gap: 20px;\n`;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ModalGalleryExample\");\n$RefreshReg$(_c2, \"ModalSwitch\");","map":{"version":3,"sources":["/Users/lingnali/Desktop/TableFlash/landingp/src/App.js"],"names":["React","BrowserRouter","Router","Switch","Route","Link","useLocation","styled","css","Modal","Gallery","ModalGalleryExample","ModalSwitch","location","background","state","Image","div","index","inModal","PhotoGrid"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACEC,aAAa,IAAIC,MADnB,EAEEC,MAFF,EAGEC,KAHF,EAIEC,IAJF,EAKEC,WALF,QAMO,kBANP;AAQA,OAAOC,MAAP,IAAgBC,GAAhB,QAA0B,mBAA1B;AACA,SAAQC,KAAR,QAAoB,eAApB;AACA,SAAQC,OAAR,QAAsB,mBAAtB,C,CAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAe,SAASC,mBAAT,GAA+B;AAC5C,sBACE,QAAC,MAAD;AAAA,2BACE,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAKD;KANuBA,mB;;AAQxB,SAASC,WAAT,GAAuB;AAAA;;AACrB,MAAIC,QAAQ,GAAGP,WAAW,EAA1B,CADqB,CAGrB;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,MAAIQ,UAAU,GAAGD,QAAQ,CAACE,KAAT,IAAkBF,QAAQ,CAACE,KAAT,CAAeD,UAAlD;AAEA,sBACE;AAAA,4BACE,QAAC,MAAD;AAAQ,MAAA,QAAQ,EAAEA,UAAU,IAAID,QAAhC;AAAA,8BACE,QAAC,KAAD;AAAO,QAAA,KAAK,MAAZ;AAAa,QAAA,IAAI,EAAC,GAAlB;AAAsB,QAAA,QAAQ,eAAE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAhC;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,KAAD;AAAO,QAAA,IAAI,EAAC,UAAZ;AAAuB,QAAA,QAAQ,eAAE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAjC;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE,QAAC,KAAD;AAAO,QAAA,IAAI,EAAC,UAAZ;AAAuB,QAAA,QAAQ,eAAE,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAjC;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAQGC,UAAU,iBAAI,QAAC,KAAD;AAAO,MAAA,IAAI,EAAC,UAAZ;AAAuB,MAAA,QAAQ,eAAE,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAjC;AAAA;AAAA;AAAA;AAAA,YARjB;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAYD,C,CAED;;;GA1BSF,W;UACQN,W;;;MADRM,W;AA2BT,OAAO,MAAMI,KAAK,GAAGT,MAAM,CAACU,GAAI;AAChC;AACA;AACA;AACA;AACA;AACA,+CAA+C,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAaA,KAAM;AAClE,IAAI,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAe,CAACA,OAAD,IAAYX,GAAI;AACnC;AACA;AACA;AACA,GAAI;AACJ,CAZO,C,CAcP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMY,SAAS,GAAGb,MAAM,CAACU,GAAI;AAC7B;AACA;AACA;AACA;AACA,CALA","sourcesContent":["import React from \"react\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link,\n  useLocation\n} from \"react-router-dom\";\n\nimport styled, {css} from 'styled-components';\nimport {Modal} from './Modal/Modal';\nimport {Gallery} from \"./Gallery/Gallery\";\n\n\n// This example shows how to render two different screens\n// (or the same screen in a different context) at the same URL,\n// depending on how you got there.\n//\n// Click the \"featured images\" and see them full screen. Then\n// \"visit the gallery\" and click on the colors. Note the URL and\n// the component are the same as before but now we see them\n// inside a modal on top of the gallery screen.\n\nexport default function ModalGalleryExample() {\n  return (\n    <Router>\n      <ModalSwitch />\n    </Router>\n  );\n}\n\nfunction ModalSwitch() {\n  let location = useLocation();\n\n  // This piece of state is set when one of the\n  // gallery links is clicked. The `background` state\n  // is the location that we were at when one of\n  // the gallery links was clicked. If it's there,\n  // use it as the location for the <Switch> so\n  // we show the gallery in the background, behind\n  // the modal.\n  let background = location.state && location.state.background;\n\n  return (\n    <div>\n      <Switch location={background || location}>\n        <Route exact path=\"/\" children={<Gallery />} />\n        <Route path=\"/gallery\" children={<Gallery />} />\n        <Route path=\"/img/:id\" children={<Modal />} />\n      </Switch>\n\n      {/* Show the modal when a background page is set */}\n      {background && <Route path=\"/img/:id\" children={<Modal />} />}\n    </div>\n  );\n}\n\n// created style component\nexport const Image = styled.div`\n  width: 305px;\n  height: 305px;\n  @media(max-width:990px){\n    width: 100%;\n  }\n  background: no-repeat center/150% url(/img/${({index}) => index}.png);\n  ${({inModal}) => !inModal && css`\n    :hover {\n    opacity: .9;\n    }\n  `}\n`\n\n// function Home() {\n//   return (\n//     <div>\n//       <Link to=\"/gallery\">Visit the Gallery</Link>\n//       <h2>Featured Images</h2>\n//       <ul>\n//         <li>\n//           <Link to=\"/img/2\">Tomato</Link>\n//         </li>\n//         <li>\n//           <Link to=\"/img/4\">Crimson</Link>\n//         </li>\n//       </ul>\n//     </div>\n//   );\n// }\n\nconst PhotoGrid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(3, 305px);\n  justify-content: center;\n  gap: 20px;\n`\n"]},"metadata":{},"sourceType":"module"}