{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/lingnali/Desktop/TableFlash/landingp/src/Gallery/Gallery.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useLocation, useParams } from \"react-router-dom\";\nimport UserGrid from '../Profile/UserGrid';\nimport { Link } from 'react-router-dom';\nimport styled, { css } from 'styled-components';\nimport Posts from \"../Posts\";\nconst PhotoGrid = styled.div`\n  display: grid; \n  grid-template-columns: repeat(3, 305px); \n  justify-content: center; \n  gap: 20px; \n  grid-auto-rows: 305px; \n  ${({\n  cascade\n}) => cascade && css`\n    grid-auto-rows: 200px; \n    grid-gap: 5px; \n  `}\n  @media (max-width: 990px) {\n    gap: 5px; \n    grid-template-columns: repeat(3, 1fr); \n    grid-auto-rows: calc(33vw - 10px); \n  }\n`;\n_c = PhotoGrid;\nconst LinkGrid = styled.div`\n  display: grid; \n  grid-template-columns: auto auto; \n  justify-content: center; \n  gap: 20px; \n  margin-bottom: 20px; \n`;\n_c2 = LinkGrid;\nconst TabLink = styled(Link)`\n  text-decoration: none; \n  color: #ccc; \n  text-transform: uppercase; \n  letter-spacing: 3px; \n  ${({\n  selected\n}) => selected && 'color: black;'}\n`;\n_c3 = TabLink;\nconst ImageLink = styled(Link)`\n  background: no-repeat center/150% url(/img/${({\n  index\n}) => index}.png);\n  :hover {\n    opacity: 0.7; \n  }\n  ${({\n  cascade\n}) => cascade && css`\n    background-size: cover;\n    &:nth-of-type(2n) {\n      grid-row-start: span 2;\n    }\n  `}\n`; //to={{pathname: `${match.url}`, search:\"?type=cascade\"}}\n\n_c4 = ImageLink;\nexport function Gallery() {\n  _s();\n\n  let location = useLocation();\n  const cascade = location.search === '?type=cascade';\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(UserGrid, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(LinkGrid, {\n      children: [/*#__PURE__*/_jsxDEV(TabLink, {\n        selected: !cascade,\n        to: '/gallery',\n        children: \"POSTS\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(TabLink, {\n        selected: cascade,\n        to: {\n          pathname: '/gallery',\n          search: \"?type=cascade\"\n        },\n        children: \"TAGGED\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(PhotoGrid, {\n      cascade: cascade,\n      children: Posts.map(i =>\n      /*#__PURE__*/\n      //TODO: update tagged pic for the cascade layout \n      _jsxDEV(ImageLink, {\n        cascade: cascade,\n        index: i.id + 2,\n        to: {\n          pathname: `/img/${i.id}`,\n          // This is the trick! This link sets\n          // the `background` in location state.\n          state: {\n            background: location\n          }\n        }\n      }, i.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 7\n  }, this);\n}\n\n_s(Gallery, \"pkHmaVRPskBaU4tMJuJJpV42k1I=\", false, function () {\n  return [useLocation];\n});\n\n_c5 = Gallery;\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"PhotoGrid\");\n$RefreshReg$(_c2, \"LinkGrid\");\n$RefreshReg$(_c3, \"TabLink\");\n$RefreshReg$(_c4, \"ImageLink\");\n$RefreshReg$(_c5, \"Gallery\");","map":{"version":3,"sources":["/Users/lingnali/Desktop/TableFlash/landingp/src/Gallery/Gallery.js"],"names":["React","useLocation","useParams","UserGrid","Link","styled","css","Posts","PhotoGrid","div","cascade","LinkGrid","TabLink","selected","ImageLink","index","Gallery","location","search","pathname","map","i","id","state","background"],"mappings":";;;;;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACIC,WADJ,EACiBC,SADjB,QAEO,kBAFP;AAIA,OAAOC,QAAP,MAAqB,qBAArB;AACA,SAAQC,IAAR,QAAmB,kBAAnB;AACA,OAAOC,MAAP,IAAgBC,GAAhB,QAA0B,mBAA1B;AACA,OAAOC,KAAP,MAAkB,UAAlB;AAEA,MAAMC,SAAS,GAAGH,MAAM,CAACI,GAAI;AAC7B;AACA;AACA;AACA;AACA;AACA,IAAI,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAeA,OAAO,IAAIJ,GAAI;AAClC;AACA;AACA,GAAI;AACJ;AACA;AACA;AACA;AACA;AACA,CAfA;KAAME,S;AAiBN,MAAMG,QAAQ,GAAGN,MAAM,CAACI,GAAI;AAC5B;AACA;AACA;AACA;AACA;AACA,CANA;MAAME,Q;AAQN,MAAMC,OAAO,GAAGP,MAAM,CAACD,IAAD,CAAO;AAC7B;AACA;AACA;AACA;AACA,IAAI,CAAC;AAACS,EAAAA;AAAD,CAAD,KAAgBA,QAAQ,IAAI,eAAgB;AAChD,CANA;MAAMD,O;AAQN,MAAME,SAAS,GAAGT,MAAM,CAACD,IAAD,CAAO;AAC/B,+CAA+C,CAAC;AAACW,EAAAA;AAAD,CAAD,KAAaA,KAAM;AAClE;AACA;AACA;AACA,IAAI,CAAC;AAACL,EAAAA;AAAD,CAAD,KAAeA,OAAO,IAAIJ,GAAI;AAClC;AACA;AACA;AACA;AACA,GAAI;AACJ,CAXA,C,CAaA;;MAbMQ,S;AAcN,OAAO,SAASE,OAAT,GAAmB;AAAA;;AACtB,MAAIC,QAAQ,GAAGhB,WAAW,EAA1B;AACA,QAAMS,OAAO,GAAGO,QAAQ,CAACC,MAAT,KAAoB,eAApC;AAEA,sBACE;AAAA,4BACE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,QAAD;AAAA,8BACI,QAAC,OAAD;AAAS,QAAA,QAAQ,EAAE,CAACR,OAApB;AAA6B,QAAA,EAAE,EAAE,UAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAII,QAAC,OAAD;AAAS,QAAA,QAAQ,EAAEA,OAAnB;AAA4B,QAAA,EAAE,EAAE;AAACS,UAAAA,QAAQ,EAAE,UAAX;AAAuBD,UAAAA,MAAM,EAAC;AAA9B,SAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAUE,QAAC,SAAD;AAAW,MAAA,OAAO,EAAER,OAApB;AAAA,gBACGH,KAAK,CAACa,GAAN,CAAUC,CAAC;AAAA;AACV;AACA,cAAC,SAAD;AACE,QAAA,OAAO,EAAEX,OADX;AAGE,QAAA,KAAK,EAAEW,CAAC,CAACC,EAAF,GAAO,CAHhB;AAIE,QAAA,EAAE,EAAE;AACFH,UAAAA,QAAQ,EAAG,QAAOE,CAAC,CAACC,EAAG,EADrB;AAEF;AACA;AACAC,UAAAA,KAAK,EAAE;AAAEC,YAAAA,UAAU,EAAEP;AAAd;AAJL;AAJN,SAEOI,CAAC,CAACC,EAFT;AAAA;AAAA;AAAA;AAAA,cAFD;AADH;AAAA;AAAA;AAAA;AAAA,YAVF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA+BD;;GAnCaN,O;UACGf,W;;;MADHe,O","sourcesContent":["\nimport React from 'react';\nimport {\n    useLocation, useParams,\n} from \"react-router-dom\";\n\nimport UserGrid from '../Profile/UserGrid';\nimport {Link} from 'react-router-dom';\nimport styled, {css} from 'styled-components';\nimport Posts from \"../Posts\";\n\nconst PhotoGrid = styled.div`\n  display: grid; \n  grid-template-columns: repeat(3, 305px); \n  justify-content: center; \n  gap: 20px; \n  grid-auto-rows: 305px; \n  ${({cascade}) => cascade && css`\n    grid-auto-rows: 200px; \n    grid-gap: 5px; \n  `}\n  @media (max-width: 990px) {\n    gap: 5px; \n    grid-template-columns: repeat(3, 1fr); \n    grid-auto-rows: calc(33vw - 10px); \n  }\n`\n\nconst LinkGrid = styled.div`\n  display: grid; \n  grid-template-columns: auto auto; \n  justify-content: center; \n  gap: 20px; \n  margin-bottom: 20px; \n`\n\nconst TabLink = styled(Link)`\n  text-decoration: none; \n  color: #ccc; \n  text-transform: uppercase; \n  letter-spacing: 3px; \n  ${({selected}) => selected && 'color: black;'}\n`\n\nconst ImageLink = styled(Link)`\n  background: no-repeat center/150% url(/img/${({index}) => index}.png);\n  :hover {\n    opacity: 0.7; \n  }\n  ${({cascade}) => cascade && css`\n    background-size: cover;\n    &:nth-of-type(2n) {\n      grid-row-start: span 2;\n    }\n  `}\n`\n\n//to={{pathname: `${match.url}`, search:\"?type=cascade\"}}\nexport function Gallery() {\n    let location = useLocation();\n    const cascade = location.search === '?type=cascade';\n  \n    return (\n      <div>\n        <UserGrid/>\n        <LinkGrid>\n            <TabLink selected={!cascade} to={'/gallery'}>\n                POSTS\n            </TabLink>\n            <TabLink selected={cascade} to={{pathname: '/gallery', search:\"?type=cascade\"}}> \n                TAGGED\n            </TabLink>\n        </LinkGrid>\n        <PhotoGrid cascade={cascade}>\n          {Posts.map(i => (\n            //TODO: update tagged pic for the cascade layout \n            <ImageLink\n              cascade={cascade}\n              key={i.id}\n              index={i.id + 2}\n              to={{\n                pathname: `/img/${i.id}`,\n                // This is the trick! This link sets\n                // the `background` in location state.\n                state: { background: location }\n              }}\n            >\n\n            </ImageLink>\n          ))}\n        </PhotoGrid>\n      </div>\n    );\n  }"]},"metadata":{},"sourceType":"module"}