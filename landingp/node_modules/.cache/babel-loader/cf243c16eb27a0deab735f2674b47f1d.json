{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/lingnali/Desktop/TableFlash/landingp/src/App.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React from \"react\";\nimport { BrowserRouter as Router, Switch, Route, Link, useLocation, useParams } from \"react-router-dom\";\nimport styled, { css } from 'styled-components';\nimport UserGrid from './Profile/UserGrid';\nimport { Modal } from './Modal/Modal';\nimport Posts from './Posts';\nimport { Gallery } from \"./Gallery/Gallery\"; // This example shows how to render two different screens\n// (or the same screen in a different context) at the same URL,\n// depending on how you got there.\n//\n// Click the \"featured images\" and see them full screen. Then\n// \"visit the gallery\" and click on the colors. Note the URL and\n// the component are the same as before but now we see them\n// inside a modal on top of the gallery screen.\n\nexport default function ModalGalleryExample() {\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(ModalSwitch, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n}\n_c = ModalGalleryExample;\n\nfunction ModalSwitch() {\n  _s();\n\n  let location = useLocation(); // This piece of state is set when one of the\n  // gallery links is clicked. The `background` state\n  // is the location that we were at when one of\n  // the gallery links was clicked. If it's there,\n  // use it as the location for the <Switch> so\n  // we show the gallery in the background, behind\n  // the modal.\n\n  let background = location.state && location.state.background;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Switch, {\n      location: background || location,\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/\",\n        children: /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 41\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/gallery\",\n        children: /*#__PURE__*/_jsxDEV(Gallery, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 42\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/img/:id\",\n        children: /*#__PURE__*/_jsxDEV(ImageView, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 42\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), background && /*#__PURE__*/_jsxDEV(Route, {\n      path: \"/img/:id\",\n      children: /*#__PURE__*/_jsxDEV(Modal, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 55\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 22\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n} // created style component\n\n\n_s(ModalSwitch, \"pkHmaVRPskBaU4tMJuJJpV42k1I=\", false, function () {\n  return [useLocation];\n});\n\n_c2 = ModalSwitch;\nexport const Image = styled.div`\n  width: 305px;\n  height: 305px;\n  background: no-repeat center/150% url(/img/${({\n  index\n}) => index}.png);\n  ${({\n  inModal\n}) => !inModal && css`\n    :hover {\n    opacity: .9;\n    }\n  `}\n`; // const IMAGES = [\n//   { id: 1, title: \"Blueberry\" },\n//   { id: 2, title: \"House\" },\n//   { id: 3, title: \"Girl\"},\n//   { id: 4, title: \"Bull\" },\n//   { id: 5, title: \"Palm\"},\n//   { id: 6, title: \"Cat\"},\n//   { id: 7, title: \"Camera\" },\n//   { id: 8, title: \"Compass\" },\n//   { id: 9, title: \"Fire\" },\n//   { id: 10, title: \"Wave\" }  ,\n//   { id: 11, title: \"Coffee\" },\n//   { id: 12, title: \"Stick Man\" },\n//   { id: 13, title: \"Mountain\" },\n//   { id: 14, title: \"Succulent\" },\n//   { id: 15, title: \"Barn\" }\n// ];\n\n_c3 = Image;\n\nfunction Home() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      to: \"/gallery\",\n      children: \"Visit the Gallery\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Featured Images\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: [/*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/img/2\",\n          children: \"Tomato\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/img/4\",\n          children: \"Crimson\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 5\n  }, this);\n}\n\n_c4 = Home;\nconst PhotoGrid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(3, 305px);\n  justify-content: center;\n  gap: 20px;\n`; // function Gallery() {\n//   let location = useLocation();\n//   return (\n//     <div>\n//       <UserGrid/>\n//       <PhotoGrid>\n//         {Posts.map(i => (\n//           <Link\n//             key={i.id}\n//             to={{\n//               pathname: `/img/${i.id}`,\n//               // This is the trick! This link sets\n//               // the `background` in location state.\n//               state: { background: location }\n//             }}\n//           >\n//             <Image index={i.id} />\n//           </Link>\n//         ))}\n//       </PhotoGrid>\n//     </div>\n//   );\n// }\n\nfunction ImageView() {\n  _s2();\n\n  let {\n    id\n  } = useParams();\n  let image = Posts[parseInt(id, 10) - 1];\n  if (!image) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Image not found\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 144,\n    columnNumber: 22\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: image.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Image, {\n      index: image.id\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 147,\n    columnNumber: 5\n  }, this);\n}\n\n_s2(ImageView, \"yQgCIz/jJfqV1l9s2yoba81MT5A=\", false, function () {\n  return [useParams];\n});\n\n_c5 = ImageView;\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"ModalGalleryExample\");\n$RefreshReg$(_c2, \"ModalSwitch\");\n$RefreshReg$(_c3, \"Image\");\n$RefreshReg$(_c4, \"Home\");\n$RefreshReg$(_c5, \"ImageView\");","map":{"version":3,"sources":["/Users/lingnali/Desktop/TableFlash/landingp/src/App.js"],"names":["React","BrowserRouter","Router","Switch","Route","Link","useLocation","useParams","styled","css","UserGrid","Modal","Posts","Gallery","ModalGalleryExample","ModalSwitch","location","background","state","Image","div","index","inModal","Home","PhotoGrid","ImageView","id","image","parseInt","title"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link,\n  useLocation,\n  useParams\n} from \"react-router-dom\";\n\nimport styled, {css} from 'styled-components';\nimport UserGrid from './Profile/UserGrid';\nimport {Modal} from './Modal/Modal';\nimport Posts from './Posts';\nimport {Gallery} from \"./Gallery/Gallery\";\n\n\n// This example shows how to render two different screens\n// (or the same screen in a different context) at the same URL,\n// depending on how you got there.\n//\n// Click the \"featured images\" and see them full screen. Then\n// \"visit the gallery\" and click on the colors. Note the URL and\n// the component are the same as before but now we see them\n// inside a modal on top of the gallery screen.\n\nexport default function ModalGalleryExample() {\n  return (\n    <Router>\n      <ModalSwitch />\n    </Router>\n  );\n}\n\nfunction ModalSwitch() {\n  let location = useLocation();\n\n  // This piece of state is set when one of the\n  // gallery links is clicked. The `background` state\n  // is the location that we were at when one of\n  // the gallery links was clicked. If it's there,\n  // use it as the location for the <Switch> so\n  // we show the gallery in the background, behind\n  // the modal.\n  let background = location.state && location.state.background;\n\n  return (\n    <div>\n      <Switch location={background || location}>\n        <Route exact path=\"/\" children={<Home />} />\n        <Route path=\"/gallery\" children={<Gallery />} />\n        <Route path=\"/img/:id\" children={<ImageView />} />\n      </Switch>\n\n      {/* Show the modal when a background page is set */}\n      {background && <Route path=\"/img/:id\" children={<Modal />} />}\n    </div>\n  );\n}\n\n// created style component\nexport const Image = styled.div`\n  width: 305px;\n  height: 305px;\n  background: no-repeat center/150% url(/img/${({index}) => index}.png);\n  ${({inModal}) => !inModal && css`\n    :hover {\n    opacity: .9;\n    }\n  `}\n`\n\n// const IMAGES = [\n//   { id: 1, title: \"Blueberry\" },\n//   { id: 2, title: \"House\" },\n//   { id: 3, title: \"Girl\"},\n//   { id: 4, title: \"Bull\" },\n//   { id: 5, title: \"Palm\"},\n//   { id: 6, title: \"Cat\"},\n//   { id: 7, title: \"Camera\" },\n//   { id: 8, title: \"Compass\" },\n//   { id: 9, title: \"Fire\" },\n//   { id: 10, title: \"Wave\" }  ,\n//   { id: 11, title: \"Coffee\" },\n//   { id: 12, title: \"Stick Man\" },\n//   { id: 13, title: \"Mountain\" },\n//   { id: 14, title: \"Succulent\" },\n//   { id: 15, title: \"Barn\" }\n// ];\n\nfunction Home() {\n  return (\n    <div>\n      <Link to=\"/gallery\">Visit the Gallery</Link>\n      <h2>Featured Images</h2>\n      <ul>\n        <li>\n          <Link to=\"/img/2\">Tomato</Link>\n        </li>\n        <li>\n          <Link to=\"/img/4\">Crimson</Link>\n        </li>\n      </ul>\n    </div>\n  );\n}\n\nconst PhotoGrid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(3, 305px);\n  justify-content: center;\n  gap: 20px;\n`\n\n// function Gallery() {\n//   let location = useLocation();\n\n//   return (\n//     <div>\n//       <UserGrid/>\n//       <PhotoGrid>\n//         {Posts.map(i => (\n//           <Link\n//             key={i.id}\n//             to={{\n//               pathname: `/img/${i.id}`,\n//               // This is the trick! This link sets\n//               // the `background` in location state.\n//               state: { background: location }\n//             }}\n//           >\n//             <Image index={i.id} />\n//           </Link>\n//         ))}\n//       </PhotoGrid>\n//     </div>\n//   );\n// }\n\nfunction ImageView() {\n  let { id } = useParams();\n  let image = Posts[parseInt(id, 10) - 1];\n\n  if (!image) return <div>Image not found</div>;\n\n  return (\n    <div>\n      <h1>{image.title}</h1>\n      <Image index={image.id} />\n    </div>\n  );\n}"]},"metadata":{},"sourceType":"module"}